{"version":3,"sources":["redux/constants/productConstants.js","components/ProductCard.js","components/Skeleton.js","redux/constants/cartConstants.js","redux/actions/cartActions.js","pages/homepage.js","redux/actions/productActions.js","components/Navbar.js","pages/detailpage.js","pages/cart.js","App.js","redux/rootReducer.js","redux/reducers/productReducers.js","redux/reducers/cartReducers.js","redux/store.js","index.js"],"names":["productActions","ProductCard","id","image","title","price","href","display","flexDirection","justifyContent","width","p","border","borderRadius","gridGap","src","height","alignSelf","objectFit","fontWeight","direction","mt","alignItems","map","_","i","style","color","colorScheme","size","TheSkeleton","cartActions","addToCart","productId","product","qty","dispatch","getState","a","type","payload","localStorage","setItem","JSON","stringify","cart","cartItems","Homepage","useSelector","state","products","loading","error","console","log","useDispatch","useEffect","axios","get","data","message","getItem","parse","length","item","flexWrap","justify","mb","mx","Navbar","bgColor","position","top","left","w","align","zIndex","fontSize","cursor","to","ml","variant","DetailPage","useParams","history","useHistory","singleProduct","relatedProducts","category","getSingleProduct","gridgap","description","gridgrap","mr","onClick","push","Cart","removeFromCartHandler","h","gridGrap","padding","decreaseQty","increaseQty","toFixed","shadow","App","basename","process","path","exact","component","combineReducers","existedItem","find","x","filter","initialState","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bd05eb65.chunk.js","sourcesContent":["export const productActions = {\n    PRODUCTS_REQUEST : \"PRODUCTS_REQUEST\",\n    PRODUCTS_SUCCESS : \"PRODUCTS_SUCCESS\",\n    PRODUCTS_FAIL : \"PRODUCTS_FAIL\",\n\n    SINGLE_PRODUCT_REQUEST : \"SINGLE_PRODUCT_REQUEST\",\n    SINGLE_PRODUCT_SUCCESS : \"SINGLE_PRODUCT_SUCCESS\",\n    SINGLE_PRODUCT_FAIL : \"SINGLE_PRODUCT_FAIL\",\n\n    RELATED_PRODUCT_REQUEST : \"RELATED_PRODUCT_REQUEST\",\n    RELATED_PRODUCT_SUCCESS : \"RELATED_PRODUCT_SUCCESS\",\n    RELATED_PRODUCT_FAIL : \"RELATED_PRODUCT_FAIL\",\n}","import { Button } from \"@chakra-ui/button\";\nimport { Image } from \"@chakra-ui/react\";\nimport { Flex, Box, Text, Link } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport { AiFillStar } from \"react-icons/ai\";\n\nconst ProductCard = ({ id, image, title, price }) => {\n    return(\n        <Link \n            href={`/product/${id}`}\n            display=\"flex\"\n            flexDirection=\"column\"\n            justifyContent=\"space-between\"\n            width=\"280px\"\n            p=\"25px\"\n            border=\"3px solid #111\"\n            borderRadius=\"20px\"\n            gridGap=\"10px\"\n        >\n            <Image src={image} width=\"130px\" height=\"150px\" alignSelf=\"center\" objectFit=\"contain\" />\n            <Text fontWeight=\"500\">{title}</Text>\n            <Flex direction=\"column\">\n                <Text>$ - {price}</Text>\n                <Box display=\"flex\" mt=\"2\" alignItems=\"center\">\n                    {[0,1,2,3,4].map((_,i) => (\n                        <AiFillStar key={i} style={{ color: \"gold\" }} />\n                    ))}\n                </Box>\n            </Flex>\n            <Button colorScheme=\"teal\" size=\"md\">\n                Add to card\n            </Button>\n        </Link>\n    )\n}\nexport default ProductCard;","import { Skeleton } from \"@chakra-ui/skeleton\";\nimport React from \"react\";\n\nconst TheSkeleton = () => {\n    return <Skeleton width=\"280px\" height=\"300px\" borderRadius=\"20px\" />\n}\nexport default TheSkeleton;","export const cartActions = {\n    ADD_TO_CART : \"ADD_TO_CART\",\n    REMOVE_FROM_CART : \"REMOVE_FROM_CART\",\n    CART_EMPTY : \"CART_EMPTY\"\n}","import { cartActions } from \"../constants/cartConstants\";\n\nexport const addToCart = ( productId, product, price, qty) => async(dispatch, getState) => {\n    if( product ){\n        dispatch({\n            type: cartActions.ADD_TO_CART,\n            payload: {productId, product, price, qty},\n        })\n    }\n    localStorage.setItem(\n        \"fakestore\",\n        JSON.stringify(getState().cart.cartItems)\n    )\n}\nexport const removeFromCart = (productId) =>  async(dispatch, getState) => {\n    dispatch({\n        type: cartActions.REMOVE_FROM_CART,\n        payload: { productId }\n    })\n    localStorage.setItem(\n        \"fakestore\",\n        JSON.stringify(getState().cart.cartItems)\n    )\n}\n\nexport const cartEmpty = () => async(dispatch, getState) => {\n    dispatch({ type: cartActions.CART_EMPTY})\n    localStorage.setItem(\n        \"fakestore\",\n        JSON.stringify(getState().cart.cartItems)\n    )\n}","import { Flex } from \"@chakra-ui/react\";\nimport React, { useEffect } from \"react\";\nimport { useSelector,useDispatch } from \"react-redux\";\nimport { getAllProducts } from \"../redux/actions/productActions\";\nimport ProductCard from \"../components/ProductCard\";\nimport TheSkeleton from \"../components/Skeleton\";\nimport { addToCart } from \"../redux/actions/cartActions\";\n\nconst Homepage = () => {\n    const { loading, products, error } = useSelector((state) => state.products);\n    console.log(products);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getAllProducts());\n    },[])\n    useEffect(() => {\n        let cart = localStorage.getItem('fakestore')\n        cart = JSON.parse(cart)\n        if( cart !== null && cart.length > 0){\n            cart.map(item => {\n                dispatch(addToCart(item.productId,item.product,item.price,item.qty))\n            })\n        }else{\n            cart = []\n        }\n    },[])\n    return(\n        <Flex\n            flexWrap=\"wrap\"\n            justify=\"center\"\n            gridGap=\"20px\"\n            mt=\"110px\"\n            mb=\"40px\"\n            mx=\"100px\"\n        >\n            {loading && [0,1,2,3,4,5,6,7].map((item,i) => <TheSkeleton key={i}/> )}\n            \n            {products.map((product) => (\n                <ProductCard\n                key = {product.id}\n                id = {product.id}\n                image = {product.image}\n                title = {product.title}\n                price = {product.price}\n                />\n            ))}\n        </Flex>\n    )\n}\nexport default Homepage;","import axios from \"axios\";\nimport { productActions } from \"../constants/productConstants\";\n\nexport const getAllProducts = () => async(dispatch) => {\n    console.log('hi')\n    dispatch({\n        type: productActions.PRODUCTS_REQUEST\n    })\n    try{\n        const { data } = await axios.get(\"https://fakestoreapi.com/products\")\n        dispatch({\n            type: productActions.PRODUCTS_SUCCESS,payload: data\n        });\n    }catch(e){\n        dispatch({\n            type: productActions.PRODUCTS_FAIL, payload: e.message \n        });\n    }\n}\n\nexport const getSingleProduct = (id) => async(dispatch) => {\n    dispatch({\n        type: productActions.SINGLE_PRODUCT_REQUEST\n    })\n    try{\n        const { data } = await axios.get(`https://fakestoreapi.com/products/${id}`)\n        dispatch({\n            type: productActions.SINGLE_PRODUCT_SUCCESS, payload: data \n        })\n    }catch(e) {\n        dispatch({\n            type: productActions.SINGLE_PRODUCT_FAIL, payload: e.message \n        })\n    }\n}\n\nexport const getRelatedProducts = (category) => async(dispatch) => {\n    dispatch({\n        type: productActions.RELATED_PRODUCT_REQUEST\n    })\n    try{\n        const { data } = await axios.get(`https://fakestoreapi.com/products/category/${category}`)\n    dispatch({\n        type: productActions.RELATED_PRODUCT_SUCCESS, payload: data\n    })\n    }catch(e) {\n        dispatch({\n            type: productActions.SINGLE_PRODUCT_FAIL, payload: e.message\n        })\n    }\n}","import { Flex, Text } from \"@chakra-ui/react\";\nimport { Tag } from \"@chakra-ui/tag\";\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { BsMinecartLoaded } from 'react-icons/bs';\nimport { useSelector } from \"react-redux\";\n\nconst Navbar = () => {\n    const { cartItems } = useSelector((state) => state.cart)\n    return (\n        <Flex\n            bgColor=\"gray.400\"\n            p=\"20px 60px\"\n            position=\"fixed\"\n            top=\"0\"\n            left=\"0\"\n            w=\"100vw\"\n            align=\"center\"\n            justify=\"space-between\"\n            zIndex=\"1000\"\n        >\n            <Text fontSize=\"2xl\" fontWeight=\"900\" cursor=\"pointer\" w=\"150px\">\n                <Link to=\"/\">FakeStore</Link>\n            </Text>\n            <Flex gridGap=\"25px\">\n                <Text cursor=\"pointer\">Home</Text>\n                <Text cursor=\"pointer\">Category</Text>\n                <Flex align=\"center\" cursor=\"pointer\">\n                    <BsMinecartLoaded style={{ fontSize: \"22px\"}} />\n                    <Tag ml=\"5px\" size=\"sm\" variant=\"solid\" colorScheme=\"teal\">\n                        {cartItems?.length}\n                    </Tag>\n                </Flex>\n            </Flex>\n\n        </Flex>\n    )\n}\nexport default Navbar;","import React,{useEffect} from 'react';\nimport { Image } from '@chakra-ui/react';\nimport { Flex, Text, Divider } from '@chakra-ui/react';\nimport { Button } from '@chakra-ui/button';\nimport { Tag } from '@chakra-ui/tag';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router';\nimport { AiFillHeart } from 'react-icons/ai';\nimport { getRelatedProducts, getSingleProduct } from '../redux/actions/productActions';\nimport ProductCard from '../components/ProductCard';\nimport { addToCart } from '../redux/actions/cartActions';\n\nconst DetailPage = () => {\n    const { id } = useParams();\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const { loading, product, error} = useSelector((state) => state.singleProduct);\n    const { products } = useSelector((state) => state.relatedProducts);\n\n    useEffect(() => {\n        if(!product.category){\n            dispatch(getSingleProduct(id))\n        }\n        if(product.category){\n            console.log(product.category)\n            dispatch(getRelatedProducts(product.category))\n        }\n    }, [product.category])\n\n    const addToCartHandler = () => {\n        dispatch(addToCart(product.id, product, product.price, 1))\n        history.push('/cart')\n    }\n\n    // useEffect(() => {\n    //     let cart = localStorage.getItem('fakestore')\n    //     cart = JSON.parse(cart)\n    //     console.log(cart)\n    //     if( cart.length > 0){\n    //         console.log('hi')\n    //         cart = cart\n    //     }else{\n    //         cart[0]= []\n    //         cart[0].product = undefined\n    //         cart[0].qty = undefined\n    //     }\n    //     let p = cart[0].product;\n    //     console.log(p)\n    //     let qty = cart[0].qty;\n    //     dispatch(addToCart(p.id,p,p.price,qty))\n    // },[])\n\n    useEffect(() => {\n        let cart = localStorage.getItem('fakestore')\n        cart = JSON.parse(cart)\n        if( cart!== null && cart.length > 0){\n            cart.map(item => {\n                dispatch(addToCart(item.productId,item.product,item.price,item.qty))\n            })\n        }else{\n            cart = []\n        }\n    },[])\n\n    return(\n        <Flex mt=\"110px\" mb=\"40px\" mx=\"120\">\n            { loading ? (\n                <h2>Loading ...</h2>\n            ) : (\n            <Flex direction=\"column\" width=\"100%\" gridgap=\"30px\">\n                <Flex justify=\"space-evenly\" width=\"100%\">\n                    <Image src={product.image} width=\"300px\"/>\n                    <Flex direction=\"row\" gridgap=\"15px\" width=\"400px\" mt=\"50px\">\n                        <Flex direction=\"column\" align=\"center\" gridGap=\"15px\">\n                            <Tag size=\"md\" variant=\"outline\">\n                                Category - {product.category}\n                            </Tag>\n                            <AiFillHeart\n                            style = {{ fontSize: \"22px\", color: \"red\", cursor: \"pointer\"}}\n                            />\n                            <Text fontSize=\"20px\" fontWeight=\"700\">\n                                {product.title}\n                            </Text>\n                            <Text fontSize=\"16px\" fontWeight=\"500\">\n                                $ {product.price}\n                            </Text>\n                            <Text fontSize=\"16px\">\n                                {product.description}\n                            </Text>\n                            <Flex gridgrap=\"20px\">\n                                <Button colorScheme=\"teal\" mr=\"20px\" onClick={() => addToCartHandler()}>\n                                    Add To Cart\n                                </Button>\n                                <Button colorScheme=\"teal\" variant=\"outline\">\n                                    Buy Now\n                                </Button>\n                            </Flex>\n                        </Flex>\n                    </Flex>\n                    </Flex>\n                    <Divider />\n                    <Text fontSize=\"20px\" fontWeight=\"700\">\n                        Related Products\n                    </Text>\n                    <Flex\n                        flexWrap=\"wrap\"\n                        justify=\"center\"\n                        gridGap=\"20px\"\n                        mb=\"40px\"\n                    >\n                        {products.map((product) => (\n                            <ProductCard\n                                key={product.id}\n                                id={product.id}\n                                image={product.image}\n                                title={product.title}\n                                price={product.price}\n                                />\n                        ))}\n                    </Flex>\n\n            </Flex> \n            )}\n            \n        </Flex>\n    )\n}\nexport default DetailPage;","import { Button } from \"@chakra-ui/button\";\nimport { Image } from \"@chakra-ui/react\";\nimport { Divider, Flex, Text } from \"@chakra-ui/react\";\nimport React,{ useEffect} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport { addToCart, removeFromCart } from \"../redux/actions/cartActions\";\nimport {\n    Table,\n    Thead,\n    Tbody,\n    Tr,\n    Th,\n    Td,\n    TableCaption,\n} from \"@chakra-ui/react\"\nconst Cart = () => {\n    const { cartItems } = useSelector((state) => state.cart);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        let cart = localStorage.getItem('fakestore')\n        cart = JSON.parse(cart)\n        if( cart !== null && cart.length > 0){\n            cart.map(item => {\n                dispatch(addToCart(item.productId,item.product,item.price,item.qty))\n            })\n        }else{\n            cart = []\n        }\n    },[])\n\n    // useEffect(() => {\n    //     let cart = localStorage.getItem('fakestore')\n    //     cart = JSON.parse(cart)\n    //     console.log(cart)\n    //     if( cart.length > 0){\n    //         console.log('hi')\n\n    //     }else{\n    //         cart[0]=[]\n    //         cart[0].product = []\n    //         cart[0].qty = []\n    //     }\n    //     let p = cart[0].product;\n    //     let qty = cart[0].qty;\n    //     dispatch(addToCart(p.id,p,p.price,qty))\n    // },[])\n    useEffect(() => {\n        let cart = localStorage.getItem('fakestore')\n        cart = JSON.parse(cart)\n        console.log(cart)\n    },[])\n\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n\n    const decreaseQty = (item) => {\n        if(item.qty > 1) {\n            dispatch(addToCart(item.productId, item.product, item.price, item.qty-1))\n        }\n    }\n\n    const increaseQty = (item) => {\n        dispatch(addToCart(item.productId, item.product, item.price, item.qty + 1))\n    }\n\n    return(\n        <Flex mt=\"110px\" mb=\"40px\" mx=\"100px\" direction=\"column\" align=\"center\" gridGap=\"70px\" justify=\"space-between\">\n            <Table variant=\"simple\" width=\"100%\">\n                <TableCaption>\n                    Thanks for shopping with us. Here is your cart!\n                </TableCaption>\n                <Thead>\n                    <Tr>\n                        <Th>Image</Th>\n                        <Th>Name</Th>\n                        <Th>Quantity</Th>\n                        <Th>Total Price</Th>\n                        <Th>Actions</Th>\n                    </Tr>\n                </Thead>\n                <Tbody>\n                    {cartItems.map((item, i) => (\n                        <Tr>\n                            <Td>\n                                <Image src={item.product.image} h=\"100px\" />\n                            </Td>\n                            <Td>\n                                <Text>{item.product.title}</Text>\n                            </Td>\n                            <Td >\n                                <Flex justifyContent=\"space-around\" align=\"center\" gridGrap=\"10px\">\n                                    <Button padding=\"10px\" onClick={() => decreaseQty(item)}>-</Button>\n                                    <Text>{item.qty}</Text>\n                                    <Button padding=\"10px\" onClick={() => increaseQty(item)}>+</Button>\n                                </Flex>\n                            </Td>\n                            <Td>\n                                <Text>$ {(item.price * item.qty).toFixed(2)}</Text>\n                            </Td>\n                            <Td>\n                                <AiFillDelete\n                                    style={{ fontSize: \"30px\", cursor: \"pointer\"}}\n                                    onClick={() => removeFromCartHandler(item.productId)}>\n                                </AiFillDelete>\n                            </Td>\n                        </Tr>\n                    ))}\n                </Tbody>\n            </Table>\n            <Flex direction=\"column\" gridGap=\"20px\">\n                <Text fontWeight=\"700\" fontSize=\"20px\">\n                    Order Summary\n                </Text>\n                <Flex\n                    direction=\"column\"\n                    width=\"350px\"\n                    shadow=\"lg\"\n                    p=\"20px\"\n                    borderRadius=\"10px\"\n                    gridGap=\"15px\"\n                >\n                    <Flex justify=\"space-between\">\n                        <Text fontWeight=\"500\">Item Price</Text>\n                        <Text fontWeight=\"500\">$ </Text>\n                    </Flex>\n                    <Flex justify=\"space-between\">\n                        <Text fontWeight=\"500\">Discount Price</Text>\n                        <Text fontWeight=\"500\">$ </Text>\n                    </Flex>\n                    <Flex justify=\"space-between\">\n                        <Text fontWeight=\"500\">Tax Price</Text>\n                        <Text fontWeight=\"500\">$ </Text>\n                    </Flex>\n                    <Flex justify=\"space-between\">\n                        <Text fontWeight=\"500\">Delivery Price</Text>\n                        <Text fontWeight=\"500\">$ 10</Text>\n                    </Flex>\n                    <Divider />\n                    <Flex justify=\"space-between\">\n                        <Text fontWeight=\"500\">Total Price</Text>\n                        <Text fontWeight=\"500\">\n                            $\n                        </Text>\n                    </Flex>\n                    <Button colorScheme=\"teal\">Checkout Now</Button>\n                </Flex>\n            </Flex>\n        </Flex>\n    )\n}\nexport default Cart;","import { BrowserRouter as Router , Switch, Route } from \"react-router-dom\";\nimport React from \"react\";\nimport Homepage from \"./pages/homepage\";\nimport Navbar from \"./components/Navbar\";\nimport DetailPage from \"./pages/detailpage\";\nimport Cart from \"./pages/cart\";\n\nconst App = () => {\n    return(\n        <Router basename={process.env.PUBLIC_URL}>\n            <Navbar />\n            <Switch>\n                <Route path=\"/\" exact component={Homepage}/>\n                <Route path=\"/product/:id\" component={DetailPage}/>\n                <Route path=\"/cart\" component={Cart}/>\n            </Switch>\n        </Router>\n    )\n}\nexport default App;","import { combineReducers } from \"redux\";\nimport { productsReducers, singleProductReducers, relatedProductReducers } from \"./reducers/productReducers\";\nimport { cartReducers } from \"./reducers/cartReducers\";\n\nexport default combineReducers({\n    products: productsReducers,\n    singleProduct: singleProductReducers,\n    relatedProducts: relatedProductReducers,\n    cart: cartReducers,\n});","import { productActions } from \"../constants/productConstants\";\n\nexport const productsReducers = (state = {products: [] }, {type, payload}) => {\n    \n    switch(type){\n        case productActions.PRODUCTS_REQUEST:\n            return{ loading: true, products: []};\n        case productActions.PRODUCTS_SUCCESS:\n            return{ loading: false, products: payload};\n        case productActions.PRODUCTS_FAIL:\n            return{ loading: false, error: payload};\n        default:\n            return state;\n    }\n};\n\nexport const singleProductReducers = (state = { product: {}}, {type,payload} ) => {\n    switch(type){\n        case productActions.SINGLE_PRODUCT_REQUEST:\n            return{ loading: true, product: {}};\n        case productActions.SINGLE_PRODUCT_SUCCESS:\n            return{ loading: false, product: payload};\n        case productActions.SINGLE_PRODUCT_FAIL:\n            return{ loading: false, error: payload };\n        default:\n            return state;\n    }\n}\n\nexport const relatedProductReducers = (state = { products: []}, {type,payload}) => {\n    switch(type){\n        case productActions.RELATED_PRODUCT_REQUEST:\n            return{ loading: true, products: []};\n        case productActions.RELATED_PRODUCT_SUCCESS:\n            return{ loading: false, products: payload};\n        case productActions.RELATED_PRODUCT_FAIL:\n            return{ loading: false, error: payload };\n        default:\n            return state;\n    }\n}","import { cartActions } from \"../constants/cartConstants\";\n\nexport const cartReducers = ( state = { cartItems: []}, {type,payload} ) => {\n\n    switch(type){\n        case cartActions.ADD_TO_CART:\n            const item = payload;\n            const existedItem = state.cartItems.find(\n                (x) => x.productId === item.productId\n            )\n\n            if( existedItem) {\n                console.log('yes')\n                console.log(item.productId)\n                return{\n                    ...state,\n                    cartItems: state.cartItems.map((x) => \n                    x.productId === item.productId ? item: x)\n                }\n            }else{\n                return{\n                    ...state,\n                    cartItems: [...state.cartItems, item],\n                }\n            }\n        case cartActions.REMOVE_FROM_CART:\n            return{\n                ...state,\n                cartItems: state.cartItems.filter(\n                    (x) => x.productId !== payload.productId\n                )\n            }\n        case cartActions.CART_EMPTY:\n            return{ ...state, cartItems: []}\n        default: \n            return state;\n    }\n}","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './rootReducer';\n\nconst initialState = {\n    cart: {\n        cartItems: localStorage.getItem(\"fakeStoreCart\")\n        ? JSON.parse(localStorage.getItem(\"fakeStoreCart\"))\n        : [],\n    }\n}\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeEnhancer(applyMiddleware(thunk))\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport store from './redux/store';\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,document.getElementById(\"root\")\n)"],"sourceRoot":""}