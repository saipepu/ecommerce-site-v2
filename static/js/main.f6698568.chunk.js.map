{"version":3,"sources":["redux/constants/productConstants.js","redux/actions/productActions.js","components/ProductCard.js","components/Skeleton.js","redux/constants/cartConstants.js","redux/actions/cartActions.js","pages/homepage.js","components/Navbar.js","pages/detailpage.js","pages/cart.js","App.js","redux/rootReducer.js","redux/reducers/productReducers.js","redux/reducers/cartReducers.js","redux/store.js","index.js"],"names":["productActions","getSingleProduct","id","dispatch","a","type","axios","get","data","payload","message","getRelatedProducts","category","ProductCard","image","title","price","useDispatch","useSelector","state","singleProduct","product","loading","history","error","relatedProducts","products","useHistory","display","flexDirection","justifyContent","width","p","border","borderRadius","gridGap","onClick","push","clickHandler","src","height","alignSelf","objectFit","fontWeight","direction","mt","alignItems","map","_","i","style","color","colorScheme","size","TheSkeleton","cartActions","addToCart","productId","qty","getState","localStorage","setItem","JSON","stringify","cart","cartItems","Homepage","console","log","useEffect","getItem","parse","length","item","flexWrap","justify","mb","mx","Navbar","bgColor","position","top","left","w","align","zIndex","fontSize","cursor","to","ml","variant","DetailPage","useParams","gridgap","description","gridgrap","mr","Cart","removeFromCartHandler","itemsPrice","reduce","c","discountPrice","taxPrice","h","gridGrap","padding","decreaseQty","increaseQty","toFixed","shadow","App","basename","process","path","exact","component","combineReducers","existedItem","find","x","filter","initialState","composeEnhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6698568.chunk.js","sourcesContent":["export const productActions = {\n    PRODUCTS_REQUEST : \"PRODUCTS_REQUEST\",\n    PRODUCTS_SUCCESS : \"PRODUCTS_SUCCESS\",\n    PRODUCTS_FAIL : \"PRODUCTS_FAIL\",\n\n    SINGLE_PRODUCT_REQUEST : \"SINGLE_PRODUCT_REQUEST\",\n    SINGLE_PRODUCT_SUCCESS : \"SINGLE_PRODUCT_SUCCESS\",\n    SINGLE_PRODUCT_FAIL : \"SINGLE_PRODUCT_FAIL\",\n\n    RELATED_PRODUCT_REQUEST : \"RELATED_PRODUCT_REQUEST\",\n    RELATED_PRODUCT_SUCCESS : \"RELATED_PRODUCT_SUCCESS\",\n    RELATED_PRODUCT_FAIL : \"RELATED_PRODUCT_FAIL\",\n}","import axios from \"axios\";\nimport { productActions } from \"../constants/productConstants\";\n\nexport const getAllProducts = () => async(dispatch) => {\n    console.log('hi')\n    dispatch({\n        type: productActions.PRODUCTS_REQUEST\n    })\n    try{\n        const { data } = await axios.get(\"https://fakestoreapi.com/products\")\n        dispatch({\n            type: productActions.PRODUCTS_SUCCESS,payload: data\n        });\n    }catch(e){\n        dispatch({\n            type: productActions.PRODUCTS_FAIL, payload: e.message \n        });\n    }\n}\n\nexport const getSingleProduct = (id) => async(dispatch) => {\n    dispatch({\n        type: productActions.SINGLE_PRODUCT_REQUEST\n    })\n    try{\n        const { data } = await axios.get(`https://fakestoreapi.com/products/${id}`)\n        dispatch({\n            type: productActions.SINGLE_PRODUCT_SUCCESS, payload: data \n        })\n    }catch(e) {\n        dispatch({\n            type: productActions.SINGLE_PRODUCT_FAIL, payload: e.message \n        })\n    }\n}\n\nexport const getRelatedProducts = (category) => async(dispatch) => {\n    dispatch({\n        type: productActions.RELATED_PRODUCT_REQUEST\n    })\n    try{\n        const { data } = await axios.get(`https://fakestoreapi.com/products/category/${category}`)\n    dispatch({\n        type: productActions.RELATED_PRODUCT_SUCCESS, payload: data\n    })\n    }catch(e) {\n        dispatch({\n            type: productActions.SINGLE_PRODUCT_FAIL, payload: e.message\n        })\n    }\n}","import { Button } from \"@chakra-ui/button\";\nimport { Image } from \"@chakra-ui/react\";\nimport { Flex, Box, Text, Link } from \"@chakra-ui/react\";\nimport { AiFillStar } from \"react-icons/ai\";\nimport { useHistory } from \"react-router\";\nimport { useSelector,useDispatch } from \"react-redux\";\nimport {getSingleProduct, getRelatedProducts} from '../redux/actions/productActions'\nimport React, { useEffect } from 'react'\n\n\nconst ProductCard = ({ id, image, title, price }) => {\n    const dispatch = useDispatch();\n\n    const { loading, product, error} = useSelector((state) => state.singleProduct);\n    const { products } = useSelector((state) => state.relatedProducts);\n\n\n    const history = useHistory();\n    const clickHandler = (id) => {\n        history.push(`/product/${id}`)\n                dispatch(getSingleProduct(id))\n                dispatch(getRelatedProducts(product.category))\n\n    }\n    return(\n        <Link \n            display=\"flex\"\n            flexDirection=\"column\"\n            justifyContent=\"space-between\"\n            width=\"280px\"\n            p=\"25px\"\n            border=\"3px solid #111\"\n            borderRadius=\"20px\"\n            gridGap=\"10px\"\n            onClick={() => clickHandler(id)}\n        >\n            <Image src={image} width=\"130px\" height=\"150px\" alignSelf=\"center\" objectFit=\"contain\" />\n            <Text fontWeight=\"500\">{title}</Text>\n            <Flex direction=\"column\">\n                <Text>$ - {price}</Text>\n                <Box display=\"flex\" mt=\"2\" alignItems=\"center\">\n                    {[0,1,2,3,4].map((_,i) => (\n                        <AiFillStar key={i} style={{ color: \"gold\" }} />\n                    ))}\n                </Box>\n            </Flex>\n            <Button colorScheme=\"teal\" size=\"md\">\n                Add to card\n            </Button>\n        </Link>\n    )\n}\nexport default ProductCard;","import { Skeleton } from \"@chakra-ui/skeleton\";\nimport React from \"react\";\n\nconst TheSkeleton = () => {\n    return <Skeleton width=\"280px\" height=\"300px\" borderRadius=\"20px\" />\n}\nexport default TheSkeleton;","export const cartActions = {\n    ADD_TO_CART : \"ADD_TO_CART\",\n    REMOVE_FROM_CART : \"REMOVE_FROM_CART\",\n    CART_EMPTY : \"CART_EMPTY\"\n}","import { cartActions } from \"../constants/cartConstants\";\n\nexport const addToCart = ( productId, product, price, qty) => async(dispatch, getState) => {\n    if( product ){\n        dispatch({\n            type: cartActions.ADD_TO_CART,\n            payload: {productId, product, price, qty},\n        })\n    }\n    localStorage.setItem(\n        \"fakestore\",\n        JSON.stringify(getState().cart.cartItems)\n    )\n}\nexport const removeFromCart = (productId) =>  async(dispatch, getState) => {\n    dispatch({\n        type: cartActions.REMOVE_FROM_CART,\n        payload: { productId }\n    })\n    localStorage.setItem(\n        \"fakestore\",\n        JSON.stringify(getState().cart.cartItems)\n    )\n}\n\nexport const cartEmpty = () => async(dispatch, getState) => {\n    dispatch({ type: cartActions.CART_EMPTY})\n    localStorage.setItem(\n        \"fakestore\",\n        JSON.stringify(getState().cart.cartItems)\n    )\n}","import { Flex } from \"@chakra-ui/react\";\nimport React, { useEffect } from \"react\";\nimport { useSelector,useDispatch } from \"react-redux\";\nimport { getAllProducts } from \"../redux/actions/productActions\";\nimport ProductCard from \"../components/ProductCard\";\nimport TheSkeleton from \"../components/Skeleton\";\nimport { addToCart } from \"../redux/actions/cartActions\";\n\nconst Homepage = () => {\n    const { loading, products, error } = useSelector((state) => state.products);\n    console.log(products);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(getAllProducts());\n    },[])\n    useEffect(() => {\n        let cart = localStorage.getItem('fakestore')\n        cart = JSON.parse(cart)\n        if( cart !== null && cart.length > 0){\n            cart.map(item => {\n                dispatch(addToCart(item.productId,item.product,item.price,item.qty))\n            })\n        }else{\n            cart = []\n        }\n    },[])\n    return(\n        <Flex\n            flexWrap=\"wrap\"\n            justify=\"center\"\n            gridGap=\"20px\"\n            mt=\"110px\"\n            mb=\"40px\"\n            mx=\"100px\"\n        >\n            {loading && [0,1,2,3,4,5,6,7].map((item,i) => <TheSkeleton key={i}/> )}\n            \n            {products.map((product) => (\n                <ProductCard\n                key = {product.id}\n                id = {product.id}\n                image = {product.image}\n                title = {product.title}\n                price = {product.price}\n                />\n            ))}\n        </Flex>\n    )\n}\nexport default Homepage;","import { Flex, Text } from \"@chakra-ui/react\";\nimport { Tag } from \"@chakra-ui/tag\";\nimport React from 'react';\nimport { Link } from \"react-router-dom\";\nimport { BsMinecartLoaded } from 'react-icons/bs';\nimport { useSelector } from \"react-redux\";\n\nconst Navbar = () => {\n    const { cartItems } = useSelector((state) => state.cart)\n    return (\n        <Flex\n            bgColor=\"gray.400\"\n            p=\"20px 60px\"\n            position=\"fixed\"\n            top=\"0\"\n            left=\"0\"\n            w=\"100vw\"\n            align=\"center\"\n            justify=\"space-between\"\n            zIndex=\"1000\"\n        >\n            <Text fontSize=\"2xl\" fontWeight=\"900\" cursor=\"pointer\" w=\"150px\">\n                <Link to=\"/\">FakeStore</Link>\n            </Text>\n            <Flex gridGap=\"25px\">\n                <Text cursor=\"pointer\">Home</Text>\n                <Text cursor=\"pointer\">Category</Text>\n                <Flex align=\"center\" cursor=\"pointer\">\n                    <BsMinecartLoaded style={{ fontSize: \"22px\"}} />\n                    <Tag ml=\"5px\" size=\"sm\" variant=\"solid\" colorScheme=\"teal\">\n                        {cartItems?.length}\n                    </Tag>\n                </Flex>\n            </Flex>\n\n        </Flex>\n    )\n}\nexport default Navbar;","import React,{useEffect} from 'react';\nimport { Image } from '@chakra-ui/react';\nimport { Flex, Text, Divider } from '@chakra-ui/react';\nimport { Button } from '@chakra-ui/button';\nimport { Tag } from '@chakra-ui/tag';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router';\nimport { AiFillHeart } from 'react-icons/ai';\nimport { getRelatedProducts, getSingleProduct } from '../redux/actions/productActions';\nimport ProductCard from '../components/ProductCard';\nimport { addToCart } from '../redux/actions/cartActions';\n\nconst DetailPage = () => {\n    const { id } = useParams();\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    const { loading, product, error} = useSelector((state) => state.singleProduct);\n    const { products } = useSelector((state) => state.relatedProducts);\n\n    useEffect(() => {\n        if(!product.category){\n            dispatch(getSingleProduct(id))\n        }\n        if(product.category){\n            console.log(product.category)\n            dispatch(getRelatedProducts(product.category))\n        }\n    }, [product.category])\n\n    const addToCartHandler = () => {\n        dispatch(addToCart(product.id, product, product.price, 1))\n        history.push('/cart')\n    }\n\n    // useEffect(() => {\n    //     let cart = localStorage.getItem('fakestore')\n    //     cart = JSON.parse(cart)\n    //     console.log(cart)\n    //     if( cart.length > 0){\n    //         console.log('hi')\n    //         cart = cart\n    //     }else{\n    //         cart[0]= []\n    //         cart[0].product = undefined\n    //         cart[0].qty = undefined\n    //     }\n    //     let p = cart[0].product;\n    //     console.log(p)\n    //     let qty = cart[0].qty;\n    //     dispatch(addToCart(p.id,p,p.price,qty))\n    // },[])\n\n    useEffect(() => {\n        let cart = localStorage.getItem('fakestore')\n        cart = JSON.parse(cart)\n        if( cart!== null && cart.length > 0){\n            cart.map(item => {\n                dispatch(addToCart(item.productId,item.product,item.price,item.qty))\n            })\n        }else{\n            cart = []\n        }\n    },[])\n\n    return(\n        <Flex mt=\"110px\" mb=\"40px\" mx=\"120\">\n            { loading ? (\n                <h2>Loading ...</h2>\n            ) : (\n            <Flex direction=\"column\" width=\"100%\" gridgap=\"30px\">\n                <Flex justify=\"space-evenly\" width=\"100%\">\n                    <Image src={product.image} width=\"300px\"/>\n                    <Flex direction=\"row\" gridgap=\"15px\" width=\"400px\" mt=\"50px\">\n                        <Flex direction=\"column\" align=\"center\" gridGap=\"15px\">\n                            <Tag size=\"md\" variant=\"outline\">\n                                Category - {product.category}\n                            </Tag>\n                            <AiFillHeart\n                            style = {{ fontSize: \"22px\", color: \"red\", cursor: \"pointer\"}}\n                            />\n                            <Text fontSize=\"20px\" fontWeight=\"700\">\n                                {product.title}\n                            </Text>\n                            <Text fontSize=\"16px\" fontWeight=\"500\">\n                                $ {product.price}\n                            </Text>\n                            <Text fontSize=\"16px\">\n                                {product.description}\n                            </Text>\n                            <Flex gridgrap=\"20px\">\n                                <Button colorScheme=\"teal\" mr=\"20px\" onClick={() => addToCartHandler()}>\n                                    Add To Cart\n                                </Button>\n                                <Button colorScheme=\"teal\" variant=\"outline\">\n                                    Buy Now\n                                </Button>\n                            </Flex>\n                        </Flex>\n                    </Flex>\n                    </Flex>\n                    <Divider />\n                    <Text fontSize=\"20px\" fontWeight=\"700\">\n                        Related Products\n                    </Text>\n                    <Flex\n                        flexWrap=\"wrap\"\n                        justify=\"center\"\n                        gridGap=\"20px\"\n                        mb=\"40px\"\n                    >\n                        {products.map((product) => (\n                            <ProductCard\n                                key={product.id}\n                                id={product.id}\n                                image={product.image}\n                                title={product.title}\n                                price={product.price}\n                                />\n                        ))}\n                    </Flex>\n\n            </Flex> \n            )}\n            \n        </Flex>\n    )\n}\nexport default DetailPage;","import { Button } from \"@chakra-ui/button\";\nimport { Image } from \"@chakra-ui/react\";\nimport { Divider, Flex, Text } from \"@chakra-ui/react\";\nimport React,{ useEffect} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport { addToCart, removeFromCart } from \"../redux/actions/cartActions\";\nimport {\n    Table,\n    Thead,\n    Tbody,\n    Tr,\n    Th,\n    Td,\n    TableCaption,\n} from \"@chakra-ui/react\"\nconst Cart = () => {\n    const { cartItems } = useSelector((state) => state.cart);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        let cart = localStorage.getItem('fakestore')\n        cart = JSON.parse(cart)\n        if( cart !== null && cart.length > 0){\n            cart.map(item => {\n                dispatch(addToCart(item.productId,item.product,item.price,item.qty))\n            })\n        }else{\n            cart = []\n        }\n    },[])\n\n    useEffect(() => {\n        let cart = localStorage.getItem('fakestore')\n        cart = JSON.parse(cart)\n        console.log(cart)\n    },[])\n\n    const removeFromCartHandler = (id) => {\n        dispatch(removeFromCart(id))\n    }\n\n    const decreaseQty = (item) => {\n        if(item.qty > 1) {\n            dispatch(addToCart(item.productId, item.product, item.price, item.qty-1))\n        }\n    }\n\n    const increaseQty = (item) => {\n        dispatch(addToCart(item.productId, item.product, item.price, item.qty + 1))\n    }\n    const itemsPrice = cartItems.reduce((a,c) => {\n        return a + c.price * c.qty;\n    },0)\n\n    const discountPrice = itemsPrice > 500 ? itemsPrice * (10/100) : 0;\n\n    const taxPrice = itemsPrice * (5 / 100);\n\n    return(\n        <Flex mt=\"110px\" mb=\"40px\" mx=\"100px\" direction=\"column\" align=\"center\" gridGap=\"70px\" justify=\"space-between\">\n            <Table variant=\"simple\" width=\"100%\">\n                <TableCaption>\n                    Thanks for shopping with us. Here is your cart!\n                </TableCaption>\n                <Thead>\n                    <Tr>\n                        <Th>Image</Th>\n                        <Th>Name</Th>\n                        <Th>Quantity</Th>\n                        <Th>Total Price</Th>\n                        <Th>Actions</Th>\n                    </Tr>\n                </Thead>\n                <Tbody>\n                    {cartItems.map((item, i) => (\n                        <Tr>\n                            <Td>\n                                <Image src={item.product.image} h=\"100px\" />\n                            </Td>\n                            <Td>\n                                <Text>{item.product.title}</Text>\n                            </Td>\n                            <Td >\n                                <Flex justifyContent=\"space-around\" align=\"center\" gridGrap=\"10px\">\n                                    <Button padding=\"10px\" onClick={() => decreaseQty(item)}>-</Button>\n                                    <Text>{item.qty}</Text>\n                                    <Button padding=\"10px\" onClick={() => increaseQty(item)}>+</Button>\n                                </Flex>\n                            </Td>\n                            <Td>\n                                <Text>$ {(item.price * item.qty).toFixed(2)}</Text>\n                            </Td>\n                            <Td>\n                                <AiFillDelete\n                                    style={{ fontSize: \"30px\", cursor: \"pointer\"}}\n                                    onClick={() => removeFromCartHandler(item.productId)}>\n                                </AiFillDelete>\n                            </Td>\n                        </Tr>\n                    ))}\n                </Tbody>\n            </Table>\n            <Flex direction=\"column\" gridGap=\"20px\">\n                <Text fontWeight=\"700\" fontSize=\"20px\">\n                    Order Summary\n                </Text>\n                <Flex\n                    direction=\"column\"\n                    width=\"350px\"\n                    shadow=\"lg\"\n                    p=\"20px\"\n                    borderRadius=\"10px\"\n                    gridGap=\"15px\"\n                >\n                    <Flex justify=\"space-between\">\n                        <Text fontWeight=\"500\">Item Price</Text>\n                        <Text fontWeight=\"500\">$ {itemsPrice.toFixed(2)}</Text>\n                    </Flex>\n                    <Flex justify=\"space-between\">\n                        <Text fontWeight=\"500\">Discount Price</Text>\n                        <Text fontWeight=\"500\">$ {discountPrice.toFixed(2)}</Text>\n                    </Flex>\n                    <Flex justify=\"space-between\">\n                        <Text fontWeight=\"500\">Tax Price</Text>\n                        <Text fontWeight=\"500\">$ {taxPrice.toFixed(2)}</Text>\n                    </Flex>\n                    <Flex justify=\"space-between\">\n                        <Text fontWeight=\"500\">Delivery Price</Text>\n                        <Text fontWeight=\"500\">$ 10</Text>\n                    </Flex>\n                    <Divider />\n                    <Flex justify=\"space-between\">\n                        <Text fontWeight=\"500\">Total Price</Text>\n                        <Text fontWeight=\"500\">\n                            $\n                        </Text>\n                    </Flex>\n                    <Button colorScheme=\"teal\">Checkout Now</Button>\n                </Flex>\n            </Flex>\n        </Flex>\n    )\n}\nexport default Cart;","import { BrowserRouter as Router , Switch, Route } from \"react-router-dom\";\nimport React from \"react\";\nimport Homepage from \"./pages/homepage\";\nimport Navbar from \"./components/Navbar\";\nimport DetailPage from \"./pages/detailpage\";\nimport Cart from \"./pages/cart\";\n\nconst App = () => {\n    return(\n        <Router basename={process.env.PUBLIC_URL}>\n            <Navbar />\n            <Switch>\n                <Route path=\"/\" exact component={Homepage}/>\n                <Route path=\"/product/:id\" component={DetailPage}/>\n                <Route path=\"/cart\" component={Cart}/>\n            </Switch>\n        </Router>\n    )\n}\nexport default App;","import { combineReducers } from \"redux\";\nimport { productsReducers, singleProductReducers, relatedProductReducers } from \"./reducers/productReducers\";\nimport { cartReducers } from \"./reducers/cartReducers\";\n\nexport default combineReducers({\n    products: productsReducers,\n    singleProduct: singleProductReducers,\n    relatedProducts: relatedProductReducers,\n    cart: cartReducers,\n});","import { productActions } from \"../constants/productConstants\";\n\nexport const productsReducers = (state = {products: [] }, {type, payload}) => {\n    \n    switch(type){\n        case productActions.PRODUCTS_REQUEST:\n            return{ loading: true, products: []};\n        case productActions.PRODUCTS_SUCCESS:\n            return{ loading: false, products: payload};\n        case productActions.PRODUCTS_FAIL:\n            return{ loading: false, error: payload};\n        default:\n            return state;\n    }\n};\n\nexport const singleProductReducers = (state = { product: {}}, {type,payload} ) => {\n    switch(type){\n        case productActions.SINGLE_PRODUCT_REQUEST:\n            return{ loading: true, product: {}};\n        case productActions.SINGLE_PRODUCT_SUCCESS:\n            return{ loading: false, product: payload};\n        case productActions.SINGLE_PRODUCT_FAIL:\n            return{ loading: false, error: payload };\n        default:\n            return state;\n    }\n}\n\nexport const relatedProductReducers = (state = { products: []}, {type,payload}) => {\n    switch(type){\n        case productActions.RELATED_PRODUCT_REQUEST:\n            return{ loading: true, products: []};\n        case productActions.RELATED_PRODUCT_SUCCESS:\n            return{ loading: false, products: payload};\n        case productActions.RELATED_PRODUCT_FAIL:\n            return{ loading: false, error: payload };\n        default:\n            return state;\n    }\n}","import { cartActions } from \"../constants/cartConstants\";\n\nexport const cartReducers = ( state = { cartItems: []}, {type,payload} ) => {\n\n    switch(type){\n        case cartActions.ADD_TO_CART:\n            const item = payload;\n            const existedItem = state.cartItems.find(\n                (x) => x.productId === item.productId\n            )\n\n            if( existedItem) {\n                console.log('yes')\n                console.log(item.productId)\n                return{\n                    ...state,\n                    cartItems: state.cartItems.map((x) => \n                    x.productId === item.productId ? item: x)\n                }\n            }else{\n                return{\n                    ...state,\n                    cartItems: [...state.cartItems, item],\n                }\n            }\n        case cartActions.REMOVE_FROM_CART:\n            return{\n                ...state,\n                cartItems: state.cartItems.filter(\n                    (x) => x.productId !== payload.productId\n                )\n            }\n        case cartActions.CART_EMPTY:\n            return{ ...state, cartItems: []}\n        default: \n            return state;\n    }\n}","import { createStore, compose, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './rootReducer';\n\nconst initialState = {\n    cart: {\n        cartItems: localStorage.getItem(\"fakeStoreCart\")\n        ? JSON.parse(localStorage.getItem(\"fakeStoreCart\"))\n        : [],\n    }\n}\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeEnhancer(applyMiddleware(thunk))\n);\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport store from './redux/store';\nimport { Provider } from 'react-redux'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,document.getElementById(\"root\")\n)"],"sourceRoot":""}